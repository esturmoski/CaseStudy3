
clear all
close all


%% Lab Part 1

N = 8;
d = 0.2;

M = eye(4);
M(1,2) = M(1,2)+d;
M(3,4) = M(3,4)+d;

rays_in_a = [0*ones(1,N); linspace(-pi/20, pi/20,N); 0*ones(1,N); linspace(-pi/20, pi/20,N)];
rays_out_a = M*rays_in_a;

rays_in_b = [0.01*ones(1,N); linspace(-pi/20, pi/20,N); 0.01*ones(1,N); linspace(-pi/20, pi/20,N)];
rays_out_b = M*rays_in_b;

figure
hold on

ray_z = [zeros(1,size(rays_in_a,2)); d*ones(1,size(rays_in_a,2))];
plot(ray_z, [rays_in_a(1,:); rays_out_a(1,:)], 'Color', 'Blue')


ray_z = [zeros(1,size(rays_in_b,2)); d*ones(1,size(rays_in_b,2))];
plot(ray_z, [rays_in_b(1,:); rays_out_b(1,:)], 'Color', 'Red')



%% Lab Part 2

dl = 0.2;
de = 0.8;

d = de;
%d traveled after lens

M = eye(4);
M(1,2) = M(1,2)+d;
M(3,4) = M(3,4)+d;
%Defining Free-Space Propogation after lens (right side of figure)

f = 0.15;
%Focal Length

Mf = eye(4);
Mf(2,1) = Mf(2,1)-1/f;
Mf(4,3) = Mf(4,3)-1/f;
%Matrix for lens bending


figure 
hold on

ray_z = [zeros(1,size(rays_in_a,2)); (dl)*ones(1,size(rays_in_a,2))];
plot(ray_z, [rays_in_a(1,:); rays_out_a(1,:)], 'Color', 'Blue')
plot(ray_z, [rays_in_b(1,:); rays_out_b(1,:)], 'Color', 'Red')
%Plot before the lens

%{

for i = 1:length(rays_out_a)

%[MatMax, Ind] = max(rays_out_a(1,:));

if abs(rays_out_a(1,i))>0.02
    rays_out_a(:,i) = zeros(height(rays_out_a(:,i)))
end


%if abs(max(MatMax))>0.02
    %rays_out_a(:,Ind) = []
%end

end

%
%{
k = length(rays_out_a)
for i = 1:k

if abs(rays_out_a(1,i))>0.02
    rays_out_a(:,i) = []
    i = i-1
    k = k-1
end
end
%}


if abs(rays_out_b(1,i))>0.02
    rays_out_b(:,i) = zeros(height(rays_out_b(:,i)))
end



%%
for i = 1:length(ray_z)

if abs(rays_out_b(1,i))>0.02
    %rays_out_b(:,i) = zeros(1,height(rays_out_b));
    rays_out_a(:,i) = []
    i = i-1
end
end

%}

f_rays_out_a = M*Mf*rays_out_a;
f_rays_out_b = M*Mf*rays_out_b;
%Vectors for end points after lens and free space





for i = 1:length(rays_out_a)

if abs(rays_out_a(1,i))>0.02
    rays_out_a(:,i) = zeros(1,height(rays_out_a(:,i)))
    f_rays_out_a(:,i) = zeros(1,height(f_rays_out_b(:,i)))
end

end
%Turns any columns outside the range of +/- 0.02 (lens radius) into a 0
%column


for i = 1:length(rays_out_b)

if abs(rays_out_b(1,i))>0.02
    rays_out_b(:,i) = zeros(1,height(rays_out_b(:,i)))
    f_rays_out_b(:,i) = zeros(1,height(f_rays_out_b(:,i)))
end

end
%Turns any columns outside the range of +/- 0.02 (lens radius) into a 0
%column

rays_out_a(:,any(rays_out_a==0))=[]
rays_out_b(:,any(rays_out_b==0))=[]
%Deletes 0 columns

f_rays_out_a(:,any(f_rays_out_a==0))=[]
f_rays_out_b(:,any(f_rays_out_b==0))=[]
%Deletes 0 columns

ray_z_a = [dl*ones(1,size(f_rays_out_a,2)); (dl+de)*ones(1,size(f_rays_out_a,2))];
ray_z_b = [dl*ones(1,size(f_rays_out_b,2)); (dl+de)*ones(1,size(f_rays_out_b,2))];

plot(ray_z_a, [rays_out_a(1,:); f_rays_out_a(1,:)], 'Color', 'Blue')
plot(ray_z_b, [rays_out_b(1,:); f_rays_out_b(1,:)], 'Color', 'Red')
%Plot after the lens


xlim([0,1])
